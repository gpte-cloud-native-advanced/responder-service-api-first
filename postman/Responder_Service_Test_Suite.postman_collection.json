{
	"info": {
		"_postman_id": "a9ce396b-d91c-4be9-add3-e0625ae672de",
		"name": "Responder Service Test Suite",
		"description": "Test Suite for Emergency Response Responder Service ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Responders",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b141cc4c-b072-4df3-82fe-1f07d269541a",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a collection of Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d15a25e0-b143-4d2f-ba49-536e591d1dc3",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 123-4567\",\n        \"latitude\": 30.45689,\n        \"longitude\": -70.95123,\n        \"boatCapacity\": 12,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Jane Foo\",\n        \"phoneNumber\": \"(456) 987-9632\",\n        \"latitude\": 35.97643,\n        \"longitude\": -70.19735,\n        \"boatCapacity\": 16,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Creates a collection of a `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94abaed4-755a-499e-8860-054cf7ab0b43",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 2\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(2);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				}
			],
			"description": "Tests successful creation of responders.\n\nWhen:\n  The database is empty\n  A collection of 2 responders is created\nThen\n  The database contains the two responders",
			"protocolProfileBehavior": {}
		},
		{
			"name": "List all Responders with pagination",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f0fe011-f191-4f43-abf3-7968b6d2ab10",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a collection of Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0082dd94-eee8-40af-a22d-4d1d5af2fcc3",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Isabella King\",\n        \"phoneNumber\": \"(252) 555-0861\",\n        \"latitude\": 34.15885,\n        \"longitude\": -77.87136,\n        \"boatCapacity\": 7,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Kayden Krohg\",\n        \"phoneNumber\": \"(859) 555-7095\",\n        \"latitude\": 34.1287,\n        \"longitude\": -77.90957,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Ward\",\n        \"phoneNumber\": \"(651) 555-5535\",\n        \"latitude\": 34.15739,\n        \"longitude\": -77.90058,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Xavier Williams\",\n        \"phoneNumber\": \"(704) 555-4832\",\n        \"latitude\": 34.18698,\n        \"longitude\": -77.92444,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Gianna Bryant\",\n        \"phoneNumber\": \"(984) 555-2153\",\n        \"latitude\": 34.22077,\n        \"longitude\": -77.94826,\n        \"boatCapacity\": 8,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Lillian Roberts\",\n        \"phoneNumber\": \"(828) 555-2046\",\n        \"latitude\": 34.14321,\n        \"longitude\": -77.90139,\n        \"boatCapacity\": 10,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexa Collins\",\n        \"phoneNumber\": \"(202) 555-4825\",\n        \"latitude\": 34.14149,\n        \"longitude\": -77.88031,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leah Bryant\",\n        \"phoneNumber\": \"(704) 555-4054\",\n        \"latitude\": 34.24641,\n        \"longitude\": -77.81094,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Emma Campbell\",\n        \"phoneNumber\": \"(252) 555-3048\",\n        \"latitude\": 34.15917,\n        \"longitude\": -77.92004,\n        \"boatCapacity\": 12,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexander Rodriguez\",\n        \"phoneNumber\": \"(336) 555-9241\",\n        \"latitude\": 34.08312,\n        \"longitude\": -77.90134,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Henderson\",\n        \"phoneNumber\": \"(984) 555-2994\",\n        \"latitude\": 34.0369,\n        \"longitude\": -77.90976,\n        \"boatCapacity\": 11,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Scarlett Mitchell\",\n        \"phoneNumber\": \"(252) 555-6284\",\n        \"latitude\": 34.13981,\n        \"longitude\": -77.9193,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Chase Bell\",\n        \"phoneNumber\": \"(984) 555-7900\",\n        \"latitude\": 34.18857,\n        \"longitude\": -77.8605,\n        \"boatCapacity\": 10,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leonardo Cox\",\n        \"phoneNumber\": \"(651) 555-3464\",\n        \"latitude\": 34.22296,\n        \"longitude\": -77.95088,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Charles Echevarria\",\n        \"phoneNumber\": \"(828) 555-8673\",\n        \"latitude\": 34.24883,\n        \"longitude\": -77.93398,\n        \"boatCapacity\": 11,\n        \"medicalKit\": true,\n        \"available\": true\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Creates a collection of a `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "031b7b51-6098-44e3-9da4-1320ec05e905",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 15\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(15);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8defdad2-7cd2-4936-9f90-a64296659067",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 10\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(10);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders?limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a455249e-1e3b-4a8f-9d7d-d250876b7fab",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 5\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(5);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders?limit=10&offset=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "1"
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				}
			],
			"description": "Tests retrieval of responders with pagination.\n\nWhen:\n  The database is empty\n  A collection of 15 responders is created\nThen\n  If the first 10 responders are retrieved, the returned array of responders contains 10 responders\n  If the next 10 responders are retrieved, the returned array of responders contains 5 responders",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2178c401-a096-4e6a-9702-2bf95ef45e2c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "60764f27-f292-47f0-a697-01f236bf0679",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "List available Responders with pagination Copy",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e6b9f0c-f0fb-47e0-99e4-9a0b65d69c6a",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a collection of Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ddc87099-9c0b-4c0b-ba84-b2c445a0e3ae",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Isabella King\",\n        \"phoneNumber\": \"(252) 555-0861\",\n        \"latitude\": 34.15885,\n        \"longitude\": -77.87136,\n        \"boatCapacity\": 7,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Kayden Krohg\",\n        \"phoneNumber\": \"(859) 555-7095\",\n        \"latitude\": 34.1287,\n        \"longitude\": -77.90957,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Ward\",\n        \"phoneNumber\": \"(651) 555-5535\",\n        \"latitude\": 34.15739,\n        \"longitude\": -77.90058,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Xavier Williams\",\n        \"phoneNumber\": \"(704) 555-4832\",\n        \"latitude\": 34.18698,\n        \"longitude\": -77.92444,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Gianna Bryant\",\n        \"phoneNumber\": \"(984) 555-2153\",\n        \"latitude\": 34.22077,\n        \"longitude\": -77.94826,\n        \"boatCapacity\": 8,\n        \"medicalKit\": true,\n        \"available\": true\n    },\n    {\n        \"name\": \"Lillian Roberts\",\n        \"phoneNumber\": \"(828) 555-2046\",\n        \"latitude\": 34.14321,\n        \"longitude\": -77.90139,\n        \"boatCapacity\": 10,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexa Collins\",\n        \"phoneNumber\": \"(202) 555-4825\",\n        \"latitude\": 34.14149,\n        \"longitude\": -77.88031,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": true\n    },\n    {\n        \"name\": \"Leah Bryant\",\n        \"phoneNumber\": \"(704) 555-4054\",\n        \"latitude\": 34.24641,\n        \"longitude\": -77.81094,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Emma Campbell\",\n        \"phoneNumber\": \"(252) 555-3048\",\n        \"latitude\": 34.15917,\n        \"longitude\": -77.92004,\n        \"boatCapacity\": 12,\n        \"medicalKit\": true,\n        \"available\": true\n    },\n    {\n        \"name\": \"Alexander Rodriguez\",\n        \"phoneNumber\": \"(336) 555-9241\",\n        \"latitude\": 34.08312,\n        \"longitude\": -77.90134,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": true\n    },\n    {\n        \"name\": \"Ruby Henderson\",\n        \"phoneNumber\": \"(984) 555-2994\",\n        \"latitude\": 34.0369,\n        \"longitude\": -77.90976,\n        \"boatCapacity\": 11,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Scarlett Mitchell\",\n        \"phoneNumber\": \"(252) 555-6284\",\n        \"latitude\": 34.13981,\n        \"longitude\": -77.9193,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": true\n    },\n    {\n        \"name\": \"Chase Bell\",\n        \"phoneNumber\": \"(984) 555-7900\",\n        \"latitude\": 34.18857,\n        \"longitude\": -77.8605,\n        \"boatCapacity\": 10,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leonardo Cox\",\n        \"phoneNumber\": \"(651) 555-3464\",\n        \"latitude\": 34.22296,\n        \"longitude\": -77.95088,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Charles Echevarria\",\n        \"phoneNumber\": \"(828) 555-8673\",\n        \"latitude\": 34.24883,\n        \"longitude\": -77.93398,\n        \"boatCapacity\": 11,\n        \"medicalKit\": true,\n        \"available\": true\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Creates a collection of a `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all available Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57ac003f-7f16-45e4-98ce-5bf97919f0de",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\", \"enum\": [true]}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 9\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(9);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/filter/available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"",
								"responders",
								"filter",
								"available"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "List all available Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3fe25f3-bfde-4b8b-b8c7-e3fcc19644a4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\", \"enum\": [true]}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 6\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(6);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/filter/available?limit=6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"",
								"responders",
								"filter",
								"available"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "6"
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "List all available Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83180d05-2512-45c6-a867-6d25cb406912",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\", \"enum\": [true]}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 3\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(3);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/filter/available?limit=6&offset=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"",
								"responders",
								"filter",
								"available"
							],
							"query": [
								{
									"key": "limit",
									"value": "6"
								},
								{
									"key": "offset",
									"value": "1"
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				}
			],
			"description": "Tests retrieval of available responders with pagination.\n\nWhen:\n  The database is empty\n  A collection of 15 responders is created\n  9 responders are available\nThen\n  If all available responders are retrieved, the returned array contains 9 responders\n  If the first 6 available responders are retrieved, the returned array of responders contains 6 responders\n  If the next 6 available responders are retrieved, the returned array of responders contains 3 responders",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1526403c-bc7c-414e-980a-ecb5cee185d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3687e9d5-8bb8-4a71-89c5-cc8a1b5c35eb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete all Responders",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0bcd96fc-5911-4a2b-b22b-549e204ae3c5",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c451d65b-4feb-40cc-b820-77541d264072",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 0\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				}
			],
			"description": "Tests retrieval of responders with pagination.\n\nWhen:\n  The database is empty\n  A collection of 15 responders is created\nThen\n  If the first 10 responders are retrieved, the returned array of responders contains 10 responders\n  If the next 10 responders are retrieved, the returned array of responders contains 5 responders",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6feea929-c54f-4aea-b083-6e1bf45d2f80",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "20ba277d-32a6-44f4-ad0c-10095711f360",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Responder by Id",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "089075bf-a67b-44cf-806b-aaa1bb441eeb",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a collection of Responder Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c87ffc6-8726-4fc6-bb10-e8630cf7685c",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Isabella King\",\n        \"phoneNumber\": \"(252) 555-0861\",\n        \"latitude\": 34.15885,\n        \"longitude\": -77.87136,\n        \"boatCapacity\": 7,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Kayden Krohg\",\n        \"phoneNumber\": \"(859) 555-7095\",\n        \"latitude\": 34.1287,\n        \"longitude\": -77.90957,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Ward\",\n        \"phoneNumber\": \"(651) 555-5535\",\n        \"latitude\": 34.15739,\n        \"longitude\": -77.90058,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Xavier Williams\",\n        \"phoneNumber\": \"(704) 555-4832\",\n        \"latitude\": 34.18698,\n        \"longitude\": -77.92444,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Gianna Bryant\",\n        \"phoneNumber\": \"(984) 555-2153\",\n        \"latitude\": 34.22077,\n        \"longitude\": -77.94826,\n        \"boatCapacity\": 8,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Lillian Roberts\",\n        \"phoneNumber\": \"(828) 555-2046\",\n        \"latitude\": 34.14321,\n        \"longitude\": -77.90139,\n        \"boatCapacity\": 10,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexa Collins\",\n        \"phoneNumber\": \"(202) 555-4825\",\n        \"latitude\": 34.14149,\n        \"longitude\": -77.88031,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leah Bryant\",\n        \"phoneNumber\": \"(704) 555-4054\",\n        \"latitude\": 34.24641,\n        \"longitude\": -77.81094,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Emma Campbell\",\n        \"phoneNumber\": \"(252) 555-3048\",\n        \"latitude\": 34.15917,\n        \"longitude\": -77.92004,\n        \"boatCapacity\": 12,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexander Rodriguez\",\n        \"phoneNumber\": \"(336) 555-9241\",\n        \"latitude\": 34.08312,\n        \"longitude\": -77.90134,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Henderson\",\n        \"phoneNumber\": \"(984) 555-2994\",\n        \"latitude\": 34.0369,\n        \"longitude\": -77.90976,\n        \"boatCapacity\": 11,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Scarlett Mitchell\",\n        \"phoneNumber\": \"(252) 555-6284\",\n        \"latitude\": 34.13981,\n        \"longitude\": -77.9193,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Chase Bell\",\n        \"phoneNumber\": \"(984) 555-7900\",\n        \"latitude\": 34.18857,\n        \"longitude\": -77.8605,\n        \"boatCapacity\": 10,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leonardo Cox\",\n        \"phoneNumber\": \"(651) 555-3464\",\n        \"latitude\": 34.22296,\n        \"longitude\": -77.95088,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Charles Echevarria\",\n        \"phoneNumber\": \"(828) 555-8673\",\n        \"latitude\": 34.24883,\n        \"longitude\": -77.93398,\n        \"boatCapacity\": 11,\n        \"medicalKit\": true,\n        \"available\": true\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Creates a collection of a `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e688bc0-175e-46d4-9354-9bcdd6001156",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 15\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(15);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									"",
									"// store id of 10th record",
									"// store 10th record",
									"pm.collectionVariables.set(\"responderId\", jsonData[9].id);",
									"pm.collectionVariables.set(\"responder\", jsonData[9]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "Get a Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7474ee12-ece2-45b3-b8ee-34579d702a2a",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {\"type\": \"string\"},",
									"        \"name\": {\"type\": \"string\"},",
									"        \"phoneNumber\": {\"type\": \"string\"},",
									"        \"latitude\": { \"type\": \"number\"},",
									"        \"longitude\": { \"type\": \"number\"},",
									"        \"boatCapacity\": {\"type\": \"integer\"},",
									"        \"medicalKit\": {\"type\": \"boolean\"},",
									"        \"available\": {\"type\": \"boolean\"}",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"The id of the responder matches\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"responderId\"));",
									"});",
									"pm.test(\"The name of the responder matches\", function () {",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"responder\").name);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/:responderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders",
								":responderId"
							],
							"variable": [
								{
									"key": "responderId",
									"value": "{{responderId}}",
									"description": "(Required) A unique identifier for a `Responder`."
								}
							]
						},
						"description": "Gets the details of a single instance of a `Responder`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Responder`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders/:responderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders",
										":responderId"
									],
									"variable": [
										{
											"key": "responderId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"John Doe\",\n \"phoneNumber\": \"(111) 222-3333\",\n \"latitude\": 39.17972,\n \"longitude\": -75.99047,\n \"boatCapacity\": 9,\n \"medicalKit\": false,\n \"available\": true\n}"
						}
					]
				},
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eabbd54d-c56b-4dfb-9bbf-825994603785",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55a58a4e-7fe7-4450-b36c-0d45a405bc90",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/:responderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders",
								":responderId"
							],
							"variable": [
								{
									"description": "(Required) A unique identifier for a `Responder`.",
									"key": "responderId",
									"value": "{{responderId}}"
								}
							]
						},
						"description": "Gets the details of a single instance of a `Responder`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Responder`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders/:responderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders",
										":responderId"
									],
									"variable": [
										{
											"key": "responderId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"John Doe\",\n \"phoneNumber\": \"(111) 222-3333\",\n \"latitude\": 39.17972,\n \"longitude\": -75.99047,\n \"boatCapacity\": 9,\n \"medicalKit\": false,\n \"available\": true\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Update Responder",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9481f0d1-00e7-4735-ae7b-891f088c4059",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a collection of Responder Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eef583a7-95c7-4faf-9668-3c4d268eb7b3",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Isabella King\",\n        \"phoneNumber\": \"(252) 555-0861\",\n        \"latitude\": 34.15885,\n        \"longitude\": -77.87136,\n        \"boatCapacity\": 7,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Kayden Krohg\",\n        \"phoneNumber\": \"(859) 555-7095\",\n        \"latitude\": 34.1287,\n        \"longitude\": -77.90957,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Ward\",\n        \"phoneNumber\": \"(651) 555-5535\",\n        \"latitude\": 34.15739,\n        \"longitude\": -77.90058,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Xavier Williams\",\n        \"phoneNumber\": \"(704) 555-4832\",\n        \"latitude\": 34.18698,\n        \"longitude\": -77.92444,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Gianna Bryant\",\n        \"phoneNumber\": \"(984) 555-2153\",\n        \"latitude\": 34.22077,\n        \"longitude\": -77.94826,\n        \"boatCapacity\": 8,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Lillian Roberts\",\n        \"phoneNumber\": \"(828) 555-2046\",\n        \"latitude\": 34.14321,\n        \"longitude\": -77.90139,\n        \"boatCapacity\": 10,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexa Collins\",\n        \"phoneNumber\": \"(202) 555-4825\",\n        \"latitude\": 34.14149,\n        \"longitude\": -77.88031,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leah Bryant\",\n        \"phoneNumber\": \"(704) 555-4054\",\n        \"latitude\": 34.24641,\n        \"longitude\": -77.81094,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Emma Campbell\",\n        \"phoneNumber\": \"(252) 555-3048\",\n        \"latitude\": 34.15917,\n        \"longitude\": -77.92004,\n        \"boatCapacity\": 12,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexander Rodriguez\",\n        \"phoneNumber\": \"(336) 555-9241\",\n        \"latitude\": 34.08312,\n        \"longitude\": -77.90134,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Henderson\",\n        \"phoneNumber\": \"(984) 555-2994\",\n        \"latitude\": 34.0369,\n        \"longitude\": -77.90976,\n        \"boatCapacity\": 11,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Scarlett Mitchell\",\n        \"phoneNumber\": \"(252) 555-6284\",\n        \"latitude\": 34.13981,\n        \"longitude\": -77.9193,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Chase Bell\",\n        \"phoneNumber\": \"(984) 555-7900\",\n        \"latitude\": 34.18857,\n        \"longitude\": -77.8605,\n        \"boatCapacity\": 10,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leonardo Cox\",\n        \"phoneNumber\": \"(651) 555-3464\",\n        \"latitude\": 34.22296,\n        \"longitude\": -77.95088,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Charles Echevarria\",\n        \"phoneNumber\": \"(828) 555-8673\",\n        \"latitude\": 34.24883,\n        \"longitude\": -77.93398,\n        \"boatCapacity\": 11,\n        \"medicalKit\": true,\n        \"available\": true\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Creates a collection of a `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a4c5554-8aeb-477a-9f82-2b5be98b094d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 15\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(15);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									"",
									"// store id of 10th record",
									"// change name on 10th record and store ",
									"pm.collectionVariables.set(\"responderId\", jsonData[9].id);",
									"jsonData[9].name = \"James Bond\";",
									"pm.collectionVariables.set(\"responder\", JSON.stringify(jsonData[9]));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "Update a Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a928f42-049f-4352-aec2-d516e20d8667",
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{responder}}"
						},
						"url": {
							"raw": "{{baseUrl}}/responders/:responderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders",
								":responderId"
							],
							"variable": [
								{
									"description": "(Required) A unique identifier for a `Responder`.",
									"key": "responderId",
									"value": "{{responderId}}"
								}
							]
						},
						"description": "Updates an existing `Responder`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"John Doe\",\n    \"phoneNumber\": \"(111) 222-3333\",\n    \"latitude\": 39.17972,\n    \"longitude\": -75.99047,\n    \"boatCapacity\": 9,\n    \"medicalKit\": false,\n    \"available\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/responders/:responderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders",
										":responderId"
									],
									"variable": [
										{
											"key": "responderId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebb44213-8e78-49d3-8814-032f586fb591",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {\"type\": \"string\"},",
									"        \"name\": {\"type\": \"string\"},",
									"        \"phoneNumber\": {\"type\": \"string\"},",
									"        \"latitude\": { \"type\": \"number\"},",
									"        \"longitude\": { \"type\": \"number\"},",
									"        \"boatCapacity\": {\"type\": \"integer\"},",
									"        \"medicalKit\": {\"type\": \"boolean\"},",
									"        \"available\": {\"type\": \"boolean\"}",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"The id of the responder matches\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"responderId\"));",
									"});",
									"pm.test(\"The name of the responder matches\", function () {",
									"    pm.expect(jsonData.name).to.eql(\"James Bond\");",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/:responderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders",
								":responderId"
							],
							"variable": [
								{
									"description": "(Required) A unique identifier for a `Responder`.",
									"key": "responderId",
									"value": "{{responderId}}"
								}
							]
						},
						"description": "Gets the details of a single instance of a `Responder`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Responder`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders/:responderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders",
										":responderId"
									],
									"variable": [
										{
											"key": "responderId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"John Doe\",\n \"phoneNumber\": \"(111) 222-3333\",\n \"latitude\": 39.17972,\n \"longitude\": -75.99047,\n \"boatCapacity\": 9,\n \"medicalKit\": false,\n \"available\": true\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete Responder",
			"item": [
				{
					"name": "Delete all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08e0859e-a7be-48e2-8d50-e7d42bd7fce9",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Delete all the `Responder` entities"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a collection of Responder Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9832dae8-551f-41a5-a74a-59e2163a8276",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Isabella King\",\n        \"phoneNumber\": \"(252) 555-0861\",\n        \"latitude\": 34.15885,\n        \"longitude\": -77.87136,\n        \"boatCapacity\": 7,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Kayden Krohg\",\n        \"phoneNumber\": \"(859) 555-7095\",\n        \"latitude\": 34.1287,\n        \"longitude\": -77.90957,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Ward\",\n        \"phoneNumber\": \"(651) 555-5535\",\n        \"latitude\": 34.15739,\n        \"longitude\": -77.90058,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Xavier Williams\",\n        \"phoneNumber\": \"(704) 555-4832\",\n        \"latitude\": 34.18698,\n        \"longitude\": -77.92444,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Gianna Bryant\",\n        \"phoneNumber\": \"(984) 555-2153\",\n        \"latitude\": 34.22077,\n        \"longitude\": -77.94826,\n        \"boatCapacity\": 8,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Lillian Roberts\",\n        \"phoneNumber\": \"(828) 555-2046\",\n        \"latitude\": 34.14321,\n        \"longitude\": -77.90139,\n        \"boatCapacity\": 10,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexa Collins\",\n        \"phoneNumber\": \"(202) 555-4825\",\n        \"latitude\": 34.14149,\n        \"longitude\": -77.88031,\n        \"boatCapacity\": 6,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leah Bryant\",\n        \"phoneNumber\": \"(704) 555-4054\",\n        \"latitude\": 34.24641,\n        \"longitude\": -77.81094,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Emma Campbell\",\n        \"phoneNumber\": \"(252) 555-3048\",\n        \"latitude\": 34.15917,\n        \"longitude\": -77.92004,\n        \"boatCapacity\": 12,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Alexander Rodriguez\",\n        \"phoneNumber\": \"(336) 555-9241\",\n        \"latitude\": 34.08312,\n        \"longitude\": -77.90134,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Ruby Henderson\",\n        \"phoneNumber\": \"(984) 555-2994\",\n        \"latitude\": 34.0369,\n        \"longitude\": -77.90976,\n        \"boatCapacity\": 11,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Scarlett Mitchell\",\n        \"phoneNumber\": \"(252) 555-6284\",\n        \"latitude\": 34.13981,\n        \"longitude\": -77.9193,\n        \"boatCapacity\": 9,\n        \"medicalKit\": true,\n        \"available\": false\n    },\n    {\n        \"name\": \"Chase Bell\",\n        \"phoneNumber\": \"(984) 555-7900\",\n        \"latitude\": 34.18857,\n        \"longitude\": -77.8605,\n        \"boatCapacity\": 10,\n        \"medicalKit\": false,\n        \"available\": false\n    },\n    {\n        \"name\": \"Leonardo Cox\",\n        \"phoneNumber\": \"(651) 555-3464\",\n        \"latitude\": 34.22296,\n        \"longitude\": -77.95088,\n        \"boatCapacity\": 12,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"Charles Echevarria\",\n        \"phoneNumber\": \"(828) 555-8673\",\n        \"latitude\": 34.24883,\n        \"longitude\": -77.93398,\n        \"boatCapacity\": 11,\n        \"medicalKit\": true,\n        \"available\": true\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							]
						},
						"description": "Creates a collection of a `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    },\n    {\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"(111) 222-3333\",\n        \"latitude\": 39.17972,\n        \"longitude\": -75.99047,\n        \"boatCapacity\": 9,\n        \"medicalKit\": false,\n        \"available\": true\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/responders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Responders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88bca853-c657-4787-a490-903423db99a6",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"\t    \"properties\": {",
									"\t\t\t\"id\": {\"type\": \"string\"},",
									"\t\t\t\"name\": {\"type\": \"string\"},",
									"\t\t\t\"phoneNumber\": {\"type\": \"string\"},",
									"\t\t\t\"latitude\": { \"type\": \"number\"},",
									"            \"longitude\": { \"type\": \"number\"},",
									"\t\t\t\"boatCapacity\": {\"type\": \"integer\"},",
									"\t\t\t\"medicalKit\": {\"type\": \"boolean\"},",
									"\t\t\t\"available\": {\"type\": \"boolean\"}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
									"});",
									"pm.test(\"Number of records returned is 15\", function() {",
									"\tnum = Object.keys(jsonData).length;",
									"\tpm.expect(num).to.eql(15);",
									"});",
									"pm.test(\"Schema is valid\", function() {",
									"\tpm.expect(tv4.validate(jsonData, schema)).to.be.true;\t\t\t\t\t\t\t",
									"});",
									"",
									"// store id of 10th record ",
									"pm.collectionVariables.set(\"responderId\", jsonData[9].id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Gets a list of all `Responder` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Responder` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n },\n {\n  \"name\": \"John Doe\",\n  \"phoneNumber\": \"(111) 222-3333\",\n  \"latitude\": 39.17972,\n  \"longitude\": -75.99047,\n  \"boatCapacity\": 9,\n  \"medicalKit\": false,\n  \"available\": true\n }\n]"
						}
					]
				},
				{
					"name": "Delete a Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1aa1247e-4868-4f3c-8aae-db114115e7f7",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/:responderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders",
								":responderId"
							],
							"variable": [
								{
									"description": "(Required) A unique identifier for a `Responder`.",
									"key": "responderId",
									"value": "{{responderId}}"
								}
							]
						},
						"description": "Deletes an existing `Responder`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders/:responderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders",
										":responderId"
									],
									"variable": [
										{
											"key": "responderId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Responder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ceb29b85-deff-4145-aaee-cfdd58802a88",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/responders/:responderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responders",
								":responderId"
							],
							"variable": [
								{
									"description": "(Required) A unique identifier for a `Responder`.",
									"key": "responderId",
									"value": "{{responderId}}"
								}
							]
						},
						"description": "Gets the details of a single instance of a `Responder`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Responder`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/responders/:responderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responders",
										":responderId"
									],
									"variable": [
										{
											"key": "responderId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"John Doe\",\n \"phoneNumber\": \"(111) 222-3333\",\n \"latitude\": 39.17972,\n \"longitude\": -75.99047,\n \"boatCapacity\": 9,\n \"medicalKit\": false,\n \"available\": true\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4a094bd5-9755-4b8a-bbfd-60e0ecb9d49b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "91d28349-4cc6-445f-a59d-b018b72b7cec",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "fcf0b9a6-3931-487e-8c5a-faa9be5d5241",
			"key": "baseUrl",
			"value": "/"
		},
		{
			"id": "501b1975-fdb1-4a12-9652-247cd4096406",
			"key": "responderId",
			"value": ""
		},
		{
			"id": "5f4487d7-e096-474d-85e6-72da2e6566c3",
			"key": "responder",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}